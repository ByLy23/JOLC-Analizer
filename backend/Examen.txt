#INCISO A
--- tabla simbolos local funcion cociente
0 - int - a
1 - int - b
2 - int - retorno
---
--- tabla simbolos local funcion recorre
0 - int - i
1 - int - n
2 - int - cont
3 - int - vec
---
#INCISO B
proc cociente_int_int(){
    t1=P+1
    t2=pila[t1]//a
    t3=P+2
    t4=pila[t3]//b
    
    if (t2<t4) goto L1
    goto L2
    
    L1:
    t5=P+0
    pila[t5]=0
    goto LS

    L2:
    t6=1
    --guarda temporales
    P=P+3
    pila[P]=t1
    P=P+1
    pila[P]=t2
    P=P+1
    pila[P]=t3
    P=P+1
    pila[P]=t4
    P=P+1
    pila[P]=t5
    P=P+1
    pila[P]=t6
    P=P+1
    --
    t7= P-9
    t7=t7+1//Posicion de a
    t8=pila[t7]

    t9=P-9
    t9=t9+2 //posicion de b
    t10=pila[t9]
    
    t11=t7-t9

    t12=P+1 //nueva posicion de a
    pila[t12]=t11

    t13=P-9
    t13=t13+2// posicion de b
    t14=pila[t13]

    t15=P+2 //nueva posciion de b
    pila[t15]=t14

    call cociente_int_int()
    t16=P//posicion de retorno
    t17=pila[t16]
    P=P-1
    pila[P]=t6
    P=P-1
    pila[P]=t5
    P=P-1
    pila[P]=t4
    P=P-1
    pila[P]=t3
    P=P-1
    pila[P]=t2
    P=P-1
    pila[P]=t1
    P=P-3

    //procede a guardar el return
    t18=P+0
    pila[t18]=t17
    goto LS
    LS:
}
-------------------------------------
proc recorre(){
    //se reserva espacio en el heap de la declaracion de Vec
    t1=h
    heap[h]=0//1
    h=h+1
    heap[h]=0//2
    h=h+1
    heap[h]=0//3
    h=h+1
    heap[h]=0//4
    h=h+1
    heap[h]=0//5
    h=h+1
    heap[h]=0//6
    h=h+1
    heap[h]=0//7
    h=h+1
    heap[h]=0//8
    h=h+1
    heap[h]=0//9
    h=h+1
    heap[h]=0//10
    h=h+1

    t2=P+4// la pocision del arreglo vec
    pila[t2]=t1//se guarda la posicion inicial del vec

    ...
    
    P= P+num //aca se genera un nuevo entorno. num es el numero de variables en el entorno actual
    t100= P-num2 //num2 es el numero de temporales guardados + ambitos regresados +num
    t100=t100+1 //posicion de i
    t101=pila[t100]
    t102=P-num2
    
    t102=t102+4//posicion del vec
    t103=t102
    t103=t103+t101//posicion de i en el vector
    
    t104=pila[t103]//vec[i]
    
    t105=P+1
    pila[t105]=t104//se asigna como primer parametro a la funcion cociente

    t106=t106+2//posicion de n
    t107=pila[t106]

    t108=P+2
    pila[t108]=107// se asigna el segundo parametro de la funcion cociente

    call cociente_int_int()

    t109=P+0//obtiene la posicion del retorno
    t110=pila[t109]
    P=P-num //se regresa el entorno anterior

    t111=P+3 //se asigna el resultado a la variable cont
    pila[t111]=t110

    ...
}
#INCISO C

#INCISO D
#INCISO E
